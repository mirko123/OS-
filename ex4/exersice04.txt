Разписани упражнения по Операционни системи за специалност Информатика от Йордан Бабуков.

Операционни системи, упражнение 04

Команди до момента:
упр1) pwd, ls, echo, date, man
упр2) who, passwd, cat, more, less, head, tail, touch, rm, mkdir, rmdir, cp, mv, sort, cut, grep
упр3) wc, read, sleep, код на завършване, работа с променливи, изпълнение на команди във фонов режим, пренасочване на стандартен изход, стандартен вход, стандартен изход за грешка, Wildcards към команда ls, регулярни изрази към команда grep, конвейр от команди.

Новo:
Системни променливи: HOME, PS1, PATH
Екраниращи символи "", '', \
Работа с текстов редактор "vi"

1) 
Системни променливи:
echo $HOME	-> извежда на стандартния изход home директорията на потребителя изпълнил командата.
Пример:
[s44909@localhost ~]$pwd
/home/Inf/s44909

echo $PS1	-> от тази променлива се задава стойността на първоначалния prompt.
Пример:
[s44909@localhost ~]$echo $PS1
[\u@\h \W]\$
\u се асоциира с потребителя, който изпълнява команден ред echo $PS1, в случая s44909 ;)
\h се асоциира с hostnamе на работната станция, която сме изпълнили командa echo с аргумент $PS1
\W се асоциира с текущата директория, в която се намираме
Можем да променим да показва каквото ние желаем по следния начин:
PS1="[dancho@pencho mda]\$"
Mожем да върнем първоначалният вид по следния начин:
PS1="[\u@\h \W]\$"

echo $PATH	-> тук се указват директориите, в които bash ще търси дали командата съществува. Ако съществува ще я изпълни, ако 
не ще върне съобщение за грешка.
Пример:
[s44909@localhost ~]$echo $PATH
/usr/local/bin:/bin:/usr/bin

2)
Екраниращи символи:
"" 	-> Двойни кавички, не отменят специалното значение на символи.
\	-> обратна наклонена черта, отменя значението само на символа след нея.
''	-> единични кавички, отменят значение на всички специални символи между тях.

[s44909@localhost ~]$my_var=555
[s44909@localhost ~]$echo $my_var
555
[s44909@localhost ~]$echo "$my_var"
555
[s44909@localhost ~]$echo \$my_var	-> отменям специалното значение на символа $, съответно не успявам да достъпя стойността на променливата и екранирам низа "$my_var"
$my_var
[s44909@localhost ~]$echo "\$my_var"	-> само \ отменя специалното значение на символа $
$my_var
[s44909@localhost ~]$echo '$my_var'	-> тук единичните кавички отменят специалното значение на $
$my_var
[s44909@localhost ~]$echo '\$my_var'	-> единичните кавички отменят специалното значение както на \, така и на $.
\$my_var

3)
Работа с текстов редактор "vi"
Отваряне на файл за работа с "vi".
vi my_file 	-> Ако файлът съществува, се отваря в готовност на работа с текстов редактор "vi"
		-> Ако файлът несъществува, бива създаден и отворен в команден режим (какво е команден режим - след малко)

В текстов редактор "vi" има три основни режима:
Команден(command mode), редови(command line), за въвеждане(insert mode)

command mode 	-> се счита за неутрелен режим. В него отиваме чрез натискане на клавиша "ESC"
insert mode	-> това е режима, в който може да въвеждаме текст. В него може да отидем с някой от следните клавиши:
i	-> влизаме в режим на писане, като мястото на редакция е мястото на курсора в момента на натискане на клавиша
а	-> като "i", но мястото на редакция е след мястото на курсора в момента на натискането на клавиша
o	-> създава нов празен ред, над мястото на курсора, като ни поставя в режим на писане
O	-> създава нов празен ред, под мястото на курсора, като ни поставя в режим на писане
command line	-> В него се влиза чрез клавишна комбинация shift+; (т.е. ":" ) от него можем например да запаметим 
текущата си работа и/или излезем от файл

:w	-> записване файла
:q	-> излизаме от файл, ако сме го запаметили
:q!	-> излизаме от файл дори да не сме го запаметили
:wq	-> запаметяваме и излизаме

Навигиране във файл:
h,j,k,l
0 - начало на реда
^ - начало на текста
$ - край на реда

Копиране на текст във файл, отворен с редактор "vi":
yy	-> копира реда, на който е курсора (мястото където временно се пази копието се нарича "clipboard")
5yy	-> копира 5 реда, започвайки от реда на който е курсора
yw	-> копира думата над която е курсора
5yw	-> копира 5 думи, започвайки от думата, на която е курсора
y^	-> копира текста от текущото положение на курсора до началото на реда
y$	-> копира текста от текущото положение на курсора до края на реда

Поставяне на текст във файл, отворен с редактор "vi":
p	-> поставя текущото съдържанието на "clipboard" на нов ред, под курсора.
P	-> поставя текущото съдържанието на "clipboard" на нов ред, над курсора.

Триене на текст във файл, отворен с редактор "vi":
dd	-> трие реда, на който е курсора (запазва се временно в "clipboard")
5dd	-> трие 5 реда, започвайки от реда на който е курсора
d^	-> трие текста от текущото положение на курсора до началото на реда
d$	-> трие текста от текущото положение на курсора до края на реда

Разхождане из съдържанието на файл отворен чрез редактор "vi":
w	-> премества ни една дума надясно от текущото положение на курсора
5w	-> премества ни 5 думи надясно от текущото положение на курсора
b	-> премества ни една дума наляво от текущото положение на курсора
5b	-> премества ни 5 думи наляво от текущото положение на курсора
G	-> изпраща ни на последния ред
gg  -> изпраща ни в началото на файла

5G / 5gg -> изпраща ни на ред номер 5
